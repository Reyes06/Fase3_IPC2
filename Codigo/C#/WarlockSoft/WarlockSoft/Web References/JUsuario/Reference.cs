//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WarlockSoft.JUsuario {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UsuarioPortBinding", Namespace="http://Servicios/")]
    public partial class Usuario : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback obtenerUsuarioOperationCompleted;
        
        private System.Threading.SendOrPostCallback enviarMensajeOperationCompleted;
        
        private System.Threading.SendOrPostCallback mensajesEnviadosOperationCompleted;
        
        private System.Threading.SendOrPostCallback agregarContactoOperationCompleted;
        
        private System.Threading.SendOrPostCallback agregarUsuarioOperationCompleted;
        
        private System.Threading.SendOrPostCallback validarUsuarioOperationCompleted;
        
        private System.Threading.SendOrPostCallback eliminarContactoOperationCompleted;
        
        private System.Threading.SendOrPostCallback obtenerContactosOperationCompleted;
        
        private System.Threading.SendOrPostCallback agregarConocimientoOperationCompleted;
        
        private System.Threading.SendOrPostCallback agregarKarmaExtraOperationCompleted;
        
        private System.Threading.SendOrPostCallback mensajesRecibidosOperationCompleted;
        
        private System.Threading.SendOrPostCallback obtenerDatosUsuarioOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Usuario() {
            this.Url = global::WarlockSoft.Properties.Settings.Default.WarlockSoft_JUsuario_Usuario;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event obtenerUsuarioCompletedEventHandler obtenerUsuarioCompleted;
        
        /// <remarks/>
        public event enviarMensajeCompletedEventHandler enviarMensajeCompleted;
        
        /// <remarks/>
        public event mensajesEnviadosCompletedEventHandler mensajesEnviadosCompleted;
        
        /// <remarks/>
        public event agregarContactoCompletedEventHandler agregarContactoCompleted;
        
        /// <remarks/>
        public event agregarUsuarioCompletedEventHandler agregarUsuarioCompleted;
        
        /// <remarks/>
        public event validarUsuarioCompletedEventHandler validarUsuarioCompleted;
        
        /// <remarks/>
        public event eliminarContactoCompletedEventHandler eliminarContactoCompleted;
        
        /// <remarks/>
        public event obtenerContactosCompletedEventHandler obtenerContactosCompleted;
        
        /// <remarks/>
        public event agregarConocimientoCompletedEventHandler agregarConocimientoCompleted;
        
        /// <remarks/>
        public event agregarKarmaExtraCompletedEventHandler agregarKarmaExtraCompleted;
        
        /// <remarks/>
        public event mensajesRecibidosCompletedEventHandler mensajesRecibidosCompleted;
        
        /// <remarks/>
        public event obtenerDatosUsuarioCompletedEventHandler obtenerDatosUsuarioCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://Servicios/", ResponseNamespace="http://Servicios/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] obtenerUsuario([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int id_usuario) {
            object[] results = this.Invoke("obtenerUsuario", new object[] {
                        id_usuario});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void obtenerUsuarioAsync(int id_usuario) {
            this.obtenerUsuarioAsync(id_usuario, null);
        }
        
        /// <remarks/>
        public void obtenerUsuarioAsync(int id_usuario, object userState) {
            if ((this.obtenerUsuarioOperationCompleted == null)) {
                this.obtenerUsuarioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnobtenerUsuarioOperationCompleted);
            }
            this.InvokeAsync("obtenerUsuario", new object[] {
                        id_usuario}, this.obtenerUsuarioOperationCompleted, userState);
        }
        
        private void OnobtenerUsuarioOperationCompleted(object arg) {
            if ((this.obtenerUsuarioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.obtenerUsuarioCompleted(this, new obtenerUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://Servicios/", ResponseNamespace="http://Servicios/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool enviarMensaje([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int id_usuario, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string nicknameUsuario, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contenido) {
            object[] results = this.Invoke("enviarMensaje", new object[] {
                        id_usuario,
                        nicknameUsuario,
                        contenido});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void enviarMensajeAsync(int id_usuario, string nicknameUsuario, string contenido) {
            this.enviarMensajeAsync(id_usuario, nicknameUsuario, contenido, null);
        }
        
        /// <remarks/>
        public void enviarMensajeAsync(int id_usuario, string nicknameUsuario, string contenido, object userState) {
            if ((this.enviarMensajeOperationCompleted == null)) {
                this.enviarMensajeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenviarMensajeOperationCompleted);
            }
            this.InvokeAsync("enviarMensaje", new object[] {
                        id_usuario,
                        nicknameUsuario,
                        contenido}, this.enviarMensajeOperationCompleted, userState);
        }
        
        private void OnenviarMensajeOperationCompleted(object arg) {
            if ((this.enviarMensajeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enviarMensajeCompleted(this, new enviarMensajeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://Servicios/", ResponseNamespace="http://Servicios/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] mensajesEnviados([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int id_usuario) {
            object[] results = this.Invoke("mensajesEnviados", new object[] {
                        id_usuario});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void mensajesEnviadosAsync(int id_usuario) {
            this.mensajesEnviadosAsync(id_usuario, null);
        }
        
        /// <remarks/>
        public void mensajesEnviadosAsync(int id_usuario, object userState) {
            if ((this.mensajesEnviadosOperationCompleted == null)) {
                this.mensajesEnviadosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmensajesEnviadosOperationCompleted);
            }
            this.InvokeAsync("mensajesEnviados", new object[] {
                        id_usuario}, this.mensajesEnviadosOperationCompleted, userState);
        }
        
        private void OnmensajesEnviadosOperationCompleted(object arg) {
            if ((this.mensajesEnviadosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mensajesEnviadosCompleted(this, new mensajesEnviadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://Servicios/", ResponseNamespace="http://Servicios/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool agregarContacto([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string nicknameOtro, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int id_usuario) {
            object[] results = this.Invoke("agregarContacto", new object[] {
                        nicknameOtro,
                        id_usuario});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void agregarContactoAsync(string nicknameOtro, int id_usuario) {
            this.agregarContactoAsync(nicknameOtro, id_usuario, null);
        }
        
        /// <remarks/>
        public void agregarContactoAsync(string nicknameOtro, int id_usuario, object userState) {
            if ((this.agregarContactoOperationCompleted == null)) {
                this.agregarContactoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnagregarContactoOperationCompleted);
            }
            this.InvokeAsync("agregarContacto", new object[] {
                        nicknameOtro,
                        id_usuario}, this.agregarContactoOperationCompleted, userState);
        }
        
        private void OnagregarContactoOperationCompleted(object arg) {
            if ((this.agregarContactoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.agregarContactoCompleted(this, new agregarContactoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://Servicios/", ResponseNamespace="http://Servicios/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool agregarUsuario([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string nombre, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string correo, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int dia, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int mes, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int ano, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string nickname) {
            object[] results = this.Invoke("agregarUsuario", new object[] {
                        nombre,
                        correo,
                        dia,
                        mes,
                        ano,
                        password,
                        nickname});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void agregarUsuarioAsync(string nombre, string correo, int dia, int mes, int ano, string password, string nickname) {
            this.agregarUsuarioAsync(nombre, correo, dia, mes, ano, password, nickname, null);
        }
        
        /// <remarks/>
        public void agregarUsuarioAsync(string nombre, string correo, int dia, int mes, int ano, string password, string nickname, object userState) {
            if ((this.agregarUsuarioOperationCompleted == null)) {
                this.agregarUsuarioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnagregarUsuarioOperationCompleted);
            }
            this.InvokeAsync("agregarUsuario", new object[] {
                        nombre,
                        correo,
                        dia,
                        mes,
                        ano,
                        password,
                        nickname}, this.agregarUsuarioOperationCompleted, userState);
        }
        
        private void OnagregarUsuarioOperationCompleted(object arg) {
            if ((this.agregarUsuarioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.agregarUsuarioCompleted(this, new agregarUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://Servicios/", ResponseNamespace="http://Servicios/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool validarUsuario([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string nickname, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password) {
            object[] results = this.Invoke("validarUsuario", new object[] {
                        nickname,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void validarUsuarioAsync(string nickname, string password) {
            this.validarUsuarioAsync(nickname, password, null);
        }
        
        /// <remarks/>
        public void validarUsuarioAsync(string nickname, string password, object userState) {
            if ((this.validarUsuarioOperationCompleted == null)) {
                this.validarUsuarioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidarUsuarioOperationCompleted);
            }
            this.InvokeAsync("validarUsuario", new object[] {
                        nickname,
                        password}, this.validarUsuarioOperationCompleted, userState);
        }
        
        private void OnvalidarUsuarioOperationCompleted(object arg) {
            if ((this.validarUsuarioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validarUsuarioCompleted(this, new validarUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://Servicios/", ResponseNamespace="http://Servicios/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool eliminarContacto([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string nicknameOtro, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int id_usuario) {
            object[] results = this.Invoke("eliminarContacto", new object[] {
                        nicknameOtro,
                        id_usuario});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void eliminarContactoAsync(string nicknameOtro, int id_usuario) {
            this.eliminarContactoAsync(nicknameOtro, id_usuario, null);
        }
        
        /// <remarks/>
        public void eliminarContactoAsync(string nicknameOtro, int id_usuario, object userState) {
            if ((this.eliminarContactoOperationCompleted == null)) {
                this.eliminarContactoOperationCompleted = new System.Threading.SendOrPostCallback(this.OneliminarContactoOperationCompleted);
            }
            this.InvokeAsync("eliminarContacto", new object[] {
                        nicknameOtro,
                        id_usuario}, this.eliminarContactoOperationCompleted, userState);
        }
        
        private void OneliminarContactoOperationCompleted(object arg) {
            if ((this.eliminarContactoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.eliminarContactoCompleted(this, new eliminarContactoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://Servicios/", ResponseNamespace="http://Servicios/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] obtenerContactos([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int id_usuario) {
            object[] results = this.Invoke("obtenerContactos", new object[] {
                        id_usuario});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void obtenerContactosAsync(int id_usuario) {
            this.obtenerContactosAsync(id_usuario, null);
        }
        
        /// <remarks/>
        public void obtenerContactosAsync(int id_usuario, object userState) {
            if ((this.obtenerContactosOperationCompleted == null)) {
                this.obtenerContactosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnobtenerContactosOperationCompleted);
            }
            this.InvokeAsync("obtenerContactos", new object[] {
                        id_usuario}, this.obtenerContactosOperationCompleted, userState);
        }
        
        private void OnobtenerContactosOperationCompleted(object arg) {
            if ((this.obtenerContactosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.obtenerContactosCompleted(this, new obtenerContactosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://Servicios/", ResponseNamespace="http://Servicios/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool agregarConocimiento([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int id_usuario, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string conocimiento) {
            object[] results = this.Invoke("agregarConocimiento", new object[] {
                        id_usuario,
                        conocimiento});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void agregarConocimientoAsync(int id_usuario, string conocimiento) {
            this.agregarConocimientoAsync(id_usuario, conocimiento, null);
        }
        
        /// <remarks/>
        public void agregarConocimientoAsync(int id_usuario, string conocimiento, object userState) {
            if ((this.agregarConocimientoOperationCompleted == null)) {
                this.agregarConocimientoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnagregarConocimientoOperationCompleted);
            }
            this.InvokeAsync("agregarConocimiento", new object[] {
                        id_usuario,
                        conocimiento}, this.agregarConocimientoOperationCompleted, userState);
        }
        
        private void OnagregarConocimientoOperationCompleted(object arg) {
            if ((this.agregarConocimientoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.agregarConocimientoCompleted(this, new agregarConocimientoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://Servicios/", ResponseNamespace="http://Servicios/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool agregarKarmaExtra([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int id_usuarioRecibidor, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int id_usuarioDador, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string conocimiento, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int karmaExtra) {
            object[] results = this.Invoke("agregarKarmaExtra", new object[] {
                        id_usuarioRecibidor,
                        id_usuarioDador,
                        conocimiento,
                        karmaExtra});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void agregarKarmaExtraAsync(int id_usuarioRecibidor, int id_usuarioDador, string conocimiento, int karmaExtra) {
            this.agregarKarmaExtraAsync(id_usuarioRecibidor, id_usuarioDador, conocimiento, karmaExtra, null);
        }
        
        /// <remarks/>
        public void agregarKarmaExtraAsync(int id_usuarioRecibidor, int id_usuarioDador, string conocimiento, int karmaExtra, object userState) {
            if ((this.agregarKarmaExtraOperationCompleted == null)) {
                this.agregarKarmaExtraOperationCompleted = new System.Threading.SendOrPostCallback(this.OnagregarKarmaExtraOperationCompleted);
            }
            this.InvokeAsync("agregarKarmaExtra", new object[] {
                        id_usuarioRecibidor,
                        id_usuarioDador,
                        conocimiento,
                        karmaExtra}, this.agregarKarmaExtraOperationCompleted, userState);
        }
        
        private void OnagregarKarmaExtraOperationCompleted(object arg) {
            if ((this.agregarKarmaExtraCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.agregarKarmaExtraCompleted(this, new agregarKarmaExtraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://Servicios/", ResponseNamespace="http://Servicios/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] mensajesRecibidos([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int id_usuario) {
            object[] results = this.Invoke("mensajesRecibidos", new object[] {
                        id_usuario});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void mensajesRecibidosAsync(int id_usuario) {
            this.mensajesRecibidosAsync(id_usuario, null);
        }
        
        /// <remarks/>
        public void mensajesRecibidosAsync(int id_usuario, object userState) {
            if ((this.mensajesRecibidosOperationCompleted == null)) {
                this.mensajesRecibidosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmensajesRecibidosOperationCompleted);
            }
            this.InvokeAsync("mensajesRecibidos", new object[] {
                        id_usuario}, this.mensajesRecibidosOperationCompleted, userState);
        }
        
        private void OnmensajesRecibidosOperationCompleted(object arg) {
            if ((this.mensajesRecibidosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mensajesRecibidosCompleted(this, new mensajesRecibidosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://Servicios/", ResponseNamespace="http://Servicios/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] obtenerDatosUsuario([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string nickname, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password) {
            object[] results = this.Invoke("obtenerDatosUsuario", new object[] {
                        nickname,
                        password});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void obtenerDatosUsuarioAsync(string nickname, string password) {
            this.obtenerDatosUsuarioAsync(nickname, password, null);
        }
        
        /// <remarks/>
        public void obtenerDatosUsuarioAsync(string nickname, string password, object userState) {
            if ((this.obtenerDatosUsuarioOperationCompleted == null)) {
                this.obtenerDatosUsuarioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnobtenerDatosUsuarioOperationCompleted);
            }
            this.InvokeAsync("obtenerDatosUsuario", new object[] {
                        nickname,
                        password}, this.obtenerDatosUsuarioOperationCompleted, userState);
        }
        
        private void OnobtenerDatosUsuarioOperationCompleted(object arg) {
            if ((this.obtenerDatosUsuarioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.obtenerDatosUsuarioCompleted(this, new obtenerDatosUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void obtenerUsuarioCompletedEventHandler(object sender, obtenerUsuarioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class obtenerUsuarioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal obtenerUsuarioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void enviarMensajeCompletedEventHandler(object sender, enviarMensajeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enviarMensajeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enviarMensajeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void mensajesEnviadosCompletedEventHandler(object sender, mensajesEnviadosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mensajesEnviadosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mensajesEnviadosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void agregarContactoCompletedEventHandler(object sender, agregarContactoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class agregarContactoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal agregarContactoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void agregarUsuarioCompletedEventHandler(object sender, agregarUsuarioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class agregarUsuarioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal agregarUsuarioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void validarUsuarioCompletedEventHandler(object sender, validarUsuarioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validarUsuarioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal validarUsuarioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void eliminarContactoCompletedEventHandler(object sender, eliminarContactoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class eliminarContactoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal eliminarContactoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void obtenerContactosCompletedEventHandler(object sender, obtenerContactosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class obtenerContactosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal obtenerContactosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void agregarConocimientoCompletedEventHandler(object sender, agregarConocimientoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class agregarConocimientoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal agregarConocimientoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void agregarKarmaExtraCompletedEventHandler(object sender, agregarKarmaExtraCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class agregarKarmaExtraCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal agregarKarmaExtraCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void mensajesRecibidosCompletedEventHandler(object sender, mensajesRecibidosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mensajesRecibidosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mensajesRecibidosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void obtenerDatosUsuarioCompletedEventHandler(object sender, obtenerDatosUsuarioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class obtenerDatosUsuarioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal obtenerDatosUsuarioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591